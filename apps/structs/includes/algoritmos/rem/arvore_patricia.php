<?PHP 

code::init();
code::initFunction("Remove(No,Palavra,Anterior,UltimoPai)");

code::l("Se Palavra[0] == No.Info[0] então");
code::begin();
    code::l("Se Comprimento(Palavra) > Comprimento(No.Info) então");
    code::begin();
        code::l("Se IniciaCom(Palavra,No.Info) então");
        code::begin();
            code::l("Palavra := SubPalavra(Palavra,0,Comprimento(No.Info));");
            code::l("Se No.Abaixo != nulo então");
            code::begin();
                code::l("Remove(No.Abaixo,Palavra,No,No);");
            code::end();
        code::end();
    code::end();
    code::l("Senão se Palavra == No.Info e No.PalavraFinal então");
    code::begin();
        code::l("Se Anterior == nulo então");
        code::begin();
            code::l("Se No.Abaixo == nulo então");
            code::begin();
                code::l("No := No.Direita;");
            code::end();
            code::l("Senão");
            code::begin();
                code::l("Se No.Abaixo.Direita != nulo então");
                code::begin();
                    code::l("No.FinalPalavraFinal := Falso;");
                code::end();
                code::l("Senão");
                code::begin();
                    code::l("No.Info := Concatenar(No.Info,No.Abaixo.Info);");
                    code::l("No.Abaixo := No.Abaixo.Abaixo;");
                code::end();
            code::end();
        code::end();
        code::l("Senão se Anterior.Abaixo == No então");
        code::begin();
            code::l("Se No.Abaixo == nulo então");
            code::begin();
                code::l("Anterior.Abaixo := No.Direita;");
                code::l("Se No.Direita != nulo e No.Direita.Direita == nulo");
                code::begin();
                    code::l("Anterior.Info := Concatenar(Anterior.Info,No.Direita.Info);");
                    code::l("Anterior.PalavraFinal := Verdadeiro;");
                    code::l("No.Abaixo := nulo;");
                code::end();
            code::end();
            code::l("Senão");
            code::begin();
                code::l("Se No.Abaixo.Direita != nulo então");
                code::begin();
                    code::l("No.PalavraFinal := Falso;");
                code::end();
                code::l("Senão se No.Abaixo != nulo e No.Abaixo.Direita == nulo então");
                code::begin();
                    code::l("No.Info := Concatenar(No.Info,No.Abaixo.Info);");
                    code::l("No.Abaixo := No.Abaixo.Abaixo;");
                code::end();
            code::end();
        code::end();
        code::l("Senão se Anterior.Direita == No então");
        code::begin();
            code::l("Se No.Abaixo == nulo então");
            code::begin();
                code::l("Se UltimoPai.Abaixo == Anterior e Anterior.Direita == nulo então");
                code::begin();
                    code::l("Anterior.PalavraFinal :=  UltimoPai.PalavraFinal || Anterior.PalavraFinal;");
                    code::l("ultimoPai.info := Concatenar(ultimoPai.info,ultimoRelevante.info);");
                    code::l("ultimoPai.abaixo := nulo;");
                code::end();
            code::end();
            code::l("Senão");
            code::begin();
                code::l("Se No.Abaixo.Direita == nulo então");
                code::begin();
                    code::l("No.Info := Concatenar(No.Info,No.Abaixo.Info);");
                    code::l("No.Abaixo := No.Abaixo.Abaixo;");
                code::end();
                code::l("Senão");
                code::begin();
                    code::l("No.PalavraFinal := Falso;");
                code::end();
            code::end();
        code::end();
    code::end();
code::end();
code::l("Senão se No.Direita != nulo e Palavra[0] > No.Info[0] então");
code::begin();
    code::l("Remove(No.Direita,Palavra,No,UltimoPai);");
code::end();

code::write();

code::initFunction("IniciaCom(PalavraA,PalavraB)", "Se a PalavraA inicia com PalavraB");

code::l("tamanhoA,tamanhoB : inteiro;");
code::l("tamanhoA := Comprimento(PalavraA);");
code::l("tamanhoB := Comprimento(PalavraB);");
code::l();
code::l("Se tamanhoB > tamanhoA então");
code::begin();
    code::l("Retornar Falso;");
code::end();
code::l("Senão");
code::begin();
    code::l("i : inteiro;");
    code::l("i := 0;");
    code::l("Enquanto i < tamanhoB faça");
    code::begin();
        code::l("Se PalavraA[i] != PalavraB[i] então");
        code::begin();
            code::l("Retornar Falso;");
        code::end();
        code::l("i := i + 1;");
    code::end();
code::end();
code::l("Retornar Verdadeiro;");

code::write();

code::initFunction("Concatenar(PalavraA,PalavraB)","Retornar a concatenação das palavras");

code::l("tamanhoA,tamanhoB : inteiro;");
code::l("tamanhoA := Comprimento(PalavraA);");
code::l("tamanhoB := Comprimento(PalavraB);");
code::l("j : inteiro;");
code::l("j := 0;");
code::l("saida : String tamanho [tamanhoA + tamanhoB]");
code::l("Para i:inteiro de 0 até PalavraA[i] == nulo ou PalavraA[i]=='\0' passo 1 faça");
code::begin();
    code::l("saida[j] := PalavraA[i];");
    code::l("j := j + 1;");
code::end();
code::l("Para i:inteiro de 0 até PalavraA[i] == nulo ou PalavraA[i]=='\0' passo 1 faça");
code::begin();
    code::l("saida[j] := PalavraB[i]");
    code::l("j := j + 1;");
code::end();
code::l("Retornar saida;");

code::write();

generateFunctions();