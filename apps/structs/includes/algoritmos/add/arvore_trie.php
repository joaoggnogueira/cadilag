<?PHP 
code::init();
code::initFunction("Insere(Palavra)");
code::l("leitor, acima, esquerda : NoTrie;","Declarando variáveis para varredura da árvore");
code::l("indice : inteiro;","Declarando variável para auxiliar a varredura da Palavra");
code::l("leitor := RAIZ;","Varredura inicia na raiz da Árvore");
code::l("acima := nulo;","Inicializando variável auxiliar para armazenar o último nó-pai na varredura");
code::l("esquerda := nulo;","Inicializando variável auxiliar para armazenar o último nó a esquerda na varredura");
code::l("ind := 0;","Incializando variável para pecorrer palavra");
code::l();
code::l("Enquanto leitor != nulo faça","Percorrendo a árvore em busca da Palavra");
code::begin();
    code::l("Se leitor.info < Palavra[ind] então","Se o código da letra do nó for menor que o da Palavra");
    code::begin(); 
        code::l("acima := nulo;","Defini o nó-pai auxiliar como nulo");
        code::l("esquerda := leitor;","Defini o nó-irmão auxiliar a esquerda com nó atual");
        code::l("leitor := leitor.dir;","Varredura avança para o nó-irmão a direita");
    code::end();
    code::l("Senão se leitor.info > Palavra[ind] então","Se o código da letra do nó for maior que o da Palavra");
    code::begin();
        code::l("Break;","Encerra a varredura");
    code::end();
    code::l("Senão","Se a letra do nó for igual a letra da palavra percorrida");
    code::begin();
        code::l("acima := leitor;","Defini o nó-pai auxiliar com nó atual");
        code::l("esquerda := nulo;","Defini o nó-irmão auxiliar a esquerda como nulo");
        code::l("ind := ind + 1;","Varredura avança para a próxima letra da Palavra");
        code::l("Se ind == Palavra.length então","Se a varredura atingiu a última letra da palavra");
        code::begin();
            code::l("leitor.fim := Verdadeiro;","Alterando a flag do última letra");
            code::l("Retornar;","Encerra a inserção");
        code::end();
        code::l("leitor := leitor.abaixo;","Varredura avança para o nó-filho abaixo");
    code::end();
code::end();
code::l();
code::l("Se leitor != nulo então","Se a varredura encerrou em um nó nulo");
code::begin();
    code::l("InserirRamificação(leitor,Palavra,ind);","Insere a nova ramificação com as letras restantes");
code::end();
code::l("Senão","Se a varredura encerrou em um nó não nulo, exige um tratamento para inserir uma nova ramificação");
code::begin();
    code::l("novo : NoTrie;","Declarando nó para nova ramificação");
    code::l("Criar(novo, Palavra[ind], (ind + 1 == Palavra.length));","Alocando o novo nó");
    code::l();
    code::l("Se acima == nulo então","Se possui um nó-pai");
    code::begin();
        code::l("Se esquerda != nulo então","Se possui um nó-irmão a esquerda");
        code::begin();
            code::l("esquerda.direita := novo;","Elemento a esquerda aponta para o novo nó");
            code::l("novo.direita := leitor;","Novo nó aponta para último nó da varredura");
        code::end();
        code::l("Senão","Se não possui um nó-irmão a esquerda");
        code::begin();
            code::l("novo.direita := RAIZ;","novo elemento aponta a Raiz da Árvore");
            code::l("RAIZ := novo;","Novo nó se torna a raiz da Árvore");
        code::end();
    code::end();
    code::l("Senão","Se possui um nó-irmão a esquerda");
    code::begin();
        code::l("acima.abaixo := novo;","Nó-pai aponta para o nó novo");
        code::l("novo.direita := leitor;","Novo nó aponta para o último nó da varredura");
    code::end();
    code::l("InserirRamificação(novo.abaixo, Palavra, ind+1);","Insere uma nova ramificação abaixo do novo nó");
code::end();
code::write();

code::initFunction("InserirRamificação(No,Palavra,Ind)");
    code::l("max : inteiro;","Declarando variável auxiliar");
    code::l("max := Palavra.length;","Definindo valor da variável auxiliar");
    code::l("Enquanto Ind != max faça","Enquanto a palavra não for completamente percorrida");
    code::begin();
        code::l("Criar(No,Palavra[Ind],(Ind+1 == max));","Alocando novo elemento");
        code::l("No = No.abaixo;","Varredura avança para o nó-filho");
        code::l("Ind := Ind + 1;","Varredura avança para a próxima letra da Palavra");
    code::end();
code::write();

code::initFunction("Criar(No,Letra,Fim);");
    code::l("No := Alocar();","Alocando memória para o nó");
    code::l("No.info := Letra;","Definindo valor do novo nó");
    code::l("No.fim := Fim;","Definindo flag se é o último nó da Palavra");
    code::l("No.direita := nulo;","Definindo nó-irmão a direita como nulo");
    code::l("No.abaixo := nulo;","Definindo nó-irmão a abaixo como nulo");
code::write();
